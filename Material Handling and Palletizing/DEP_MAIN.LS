/PROG  DEP_MAIN
/ATTR
OWNER		= ASCBIN;
COMMENT		= "";
PROG_SIZE	= 4683;
CREATE		= DATE 25-01-16  TIME 16:06:00;
MODIFIED	= DATE 25-01-30  TIME 21:34:08;
FILE_NAME	= ;
VERSION		= 0;
LINE_COUNT	= 193;
MEMORY_SIZE	= 5255;
PROTECT		= READ_WRITE;
TCD:  STACK_SIZE	= 0,
      TASK_PRIORITY	= 50,
      TIME_SLICE	= 0,
      BUSY_LAMP_OFF	= 0,
      ABORT_REQUEST	= 0,
      PAUSE_REQUEST	= 0;
DEFAULT_GROUP	= 1,*,*,*,*;
CONTROL_CODE	= 00000000 00000000;
/APPL
/MN
   1:  ! DATA REFERENCES ;
   2:  ! P[1] READY POSITION ;
   3:  ! TIMEOUT 2.5 SECONDS ;
   4:  ! -----INPUTS----- ;
   5:  ! DI[121] - BEGIN CYCLE ;
   6:  ! DI[122] - CONTINUE WITH CYCLE ;
   7:  ! DI[123] - RESTART RESOLVED ;
   8:  ! DI[124] - CONTINUE RESTORE DATA ;
   9:  ! DI[125] - REQUEST NEW PALLET ;
  10:  ! DI[126] - VACUUM RESET ;
  11:  ! -----OUTPUTS----- ;
  12:  ! DO[121] - READY TO BEGIN CYCLE ;
  13:  ! DO[122] - IN CYCLE ;
  14:  ! DO[123] - DEPALLETIZING ;
  15:  ! DO[124] - PALLETIZING ;
  16:  ! DO[125] - ABORTED ;
  17:  ! DO[126] - Not Used (Reserved) ;
  18:  ! DO[127] - VACUUM ON AT RESTART ;
  19:  ! -----PALLET REGISTERS----- ;
  20:  ! PL[1] - DEPALLETIZE ;
  21:  ! PL[2] - PALLETIZING ;
  22:  ! -----DATA REGISTERS----- ;
  23:  ! R[1] - DEPALLET COUNT REGISTER ;
  24:  ! R[2] - PALLET COUNT REGISTER ;
  25:  ! R[3] - ERROR CODE REGISTER ;
  26:  ! R[6] - RETRY COUNT FOR ERROR HA ;
  27:  ! -----STACK GROUP OUTPUT----- ;
  28:  ! GO[11] - PARTS ON STACK, 9 to 0 ;
  29:  ! -----PALLET GROUP OUTPUT----- ;
  30:  ! GO[12] - PARTS ON PALLET, 0 to 9 ;
  31:  ! -----ERROR GROUP OUTPUT----- ;
  32:  ! GO[13] - ERROR CODE ;
  33:  ! VALUE MEANING ;
  34:  ! 0 - No Error ;
  35:  ! 1 - (Reserved) ;
  36:  ! 2 - Part Pick-up Vacuum Failure ;
  37:  ! 3 - Vacuum Motion Error ;
  38:  ! 4 - (Reserved) ;
  39:  ! 5 - Part Drop-off Vacuum Failure ;
  40:  ! 6 - (Reserved) ;
  41:  ! 7 - Vacuum ON At Restart ;
  42:  ! --STACK RESTART GROUP INPUT-- ;
  43:  ! GI[11] - NUMBER OF PARTS AT STA ;
  44:  ! --PALLET RESTART GROUP INPUT-- ;
  45:  ! GI[12] - NUMBER OF PARTS AT STA ;
  46:  ! -----OnRobot FLAGS----- ;
  47:  ! F [14] - Channel A VACUUM ;
  48:  ! F [15] - Channel B VACUUM ;
  49:  ! ---OnRobot GROUP INPUTS--- ;
  50:  ! GI [47] - Channel A VACUUM FEED ;
  51:  ! GI [48] - Channel B VACUUM FEED ;
  52:  ! ---OnRobot GROUP OUTPUTS--- ;
  53:  ! GO [47] - Channel A VACUUM COMM ;
  54:  ! GO [48] - Channel B VACUUM COMM ;
  55:  ! LBL[1] Ready To Begin Cycle ;
  56:  ! ;
  57:  ! ;
  58:  ! IF STATEMENTS FOR RESTARTS PRIO ;
  59:  ! ;
  60:  ! ;
  61:  LBL[111] ;
  62:  IF (GI[47]>1 OR GI[48]>1) THEN ;
  63:  DO[127]=ON ;
  64:  R[3:ERROR NUMBER]=7    ;
  65:  GO[13]=R[3:ERROR NUMBER] ;
  66:  UALM[6] ;
  67:  WAIT DI[126]=ON    ;
  68:  UALM[0] ;
  69:  DO[127]=OFF ;
  70:  R[3:ERROR NUMBER]=0    ;
  71:  GO[13]=R[3:ERROR NUMBER] ;
  72:  JMP LBL[111] ;
  73:  ENDIF ;
  74:  ! ;
  75:  ! ;
  76:  IF (R[3:ERROR NUMBER]>0) THEN ;
  77:  GO[13]=R[3:ERROR NUMBER] ;
  78:  ENDIF ;
  79:  ! ;
  80:  ! ;
  89:  IF (GO[13]=2) THEN ;
  90:  R[3:ERROR NUMBER]=0    ;
  91:  GO[13]=R[3:ERROR NUMBER] ;
  92:  DO[125]=OFF ;
  93:  LBL[777] ;
  94:  IF DI[125]=ON,JMP LBL[1] ;
  95:  IF DI[122]=ON,JMP LBL[2] ;
  96:  JMP LBL[777] ;
  97:  ENDIF ;
  98:  ! ;
  99:  ! ;
 100:  IF (GO[13]=3) THEN ;
 101:  R[3:ERROR NUMBER]=0    ;
 102:  GO[13]=R[3:ERROR NUMBER] ;
 103:  DO[125]=OFF ;
 104:  WAIT DI[123]=ON    ;
 105:  LBL[778] ;
 106:  IF DI[125]=ON,JMP LBL[1] ;
 107:  IF DI[122]=ON,JMP LBL[2] ;
 108:  JMP LBL[778] ;
 109:  ENDIF ;
 110:  ! ;
 111:  ! ;
 112:  IF (GO[13]=5) THEN ;
 113:  R[3:ERROR NUMBER]=0    ;
 114:  GO[13]=R[3:ERROR NUMBER] ;
 115:  DO[125]=OFF ;
 116:  WAIT DI[123]=ON    ;
 117:  R[2:PALLET COUNT]=GI[12]    ;
 118:  R[2:PALLET COUNT]=R[2:PALLET COUNT]+1    ;
  :    IF R[2] = 9, JMP LBL[1] ;
 119:  CALL DEP_LOOKTBL    ;
 120:  LBL[779] ;
 121:  IF DI[125]=ON,JMP LBL[1] ;
 122:  IF DI[122]=ON,JMP LBL[2] ;
 123:  JMP LBL[779] ;
 124:  ENDIF ;
 125:  ! ;
 126:  ! ;
 127:  !****************************** ;
 128:  !		INITIALIZATION ;
 129:  !****************************** ;
 130:  UFRAME_NUM=1 ;
 131:  UTOOL_NUM=5 ;
 132:  $WAITTMOUT=250 ;
 133:  LBL[1] ;
 134:  DO[121]=OFF ;
 135:  DO[122]=OFF ;
 136:  DO[123]=OFF ;
 137:  DO[124]=OFF ;
 138:  DO[125]=OFF ;
 139:  DO[126]=OFF ;
 140:  DO[127]=OFF ;
 141:  PL[1]=[1,1,9]    ;
 142:  PL[2]=[1,1,1]    ;
 143:  R[1:DEPALL COUNT]=9    ;
 144:  R[2:PALLET COUNT]=0    ;
 145:  R[3:ERROR CODE]=0    ;
 146:  R[6:RETRY COUNTER]=0    ;
 147:  GO[11]=R[1:DEPALL COUNT] ;
 148:  GO[12]=R[2:PALLET COUNT] ;
 149:  GO[13]=R[3:ERROR CODE] ;
 150:  !****************************** ;
 151:  ! MOVE TO READY, WAIT FOR DO[121] ;
 152:  !****************************** ;
 153:J P[1] 70% FINE    ;
 154:  R[3:ERROR CODE]=0    ;
 155:  GO[13]=R[3:ERROR CODE] ;
 156:  DO[121]=ON ;
 158:  ! ;
 159:  ! ;
 160:  ! BEGIN DEPALLETIZING CYCLE ;
 161:  ! ;
 162:  LBL[2] ;
 :  WAIT DI[121]=ON    ;
 163:  DO[121]=OFF ;
 164:  DO[122]=ON ;
 165:  DO[123]=ON ;
 166:  GO[11]=R[1:DEPALL COUNT] ;
 167:  CALL DEP_DEPALLET    ;
 168:  R[1:DEPALL COUNT]=R[1:DEPALL COUNT]-1    ;
 169:  GO[11]=R[1:DEPALL COUNT] ;
 170:  DO[123]=OFF ;
 171:  DO[124]=ON ;
 172:  GO[12]=R[2:PALLET COUNT] ;
 173:  ! ;
 174:  ! ;
 175:  ! START CONDITION MONITORING PROG ;
 176:  ! ;
 177:  MONITOR DEP_CONDMON ;
 178:  ! ;
 179:  ! ;
 180:  ! START PALLET PROGRAM ;
 181:  ! ;
 182:  CALL DEP_PALLET    ;
 183:  R[2:PALLET COUNT]=R[2:PALLET COUNT]+1    ;
 184:  LBL[4] ;
 185:  GO[12]=R[2:PALLET COUNT] ;
 186:  DO[124]=OFF ;
 187:  ! ;
 188:  ! ;
 189:  ! ;
 190:  LBL[999] ;
 191:  DO[122]=OFF ;
 192:  IF R[1:DEPALL COUNT]=0,JMP LBL[1] ;
 193:  JMP LBL[2] ;
/POS
P[1]{
   GP1:
	UF : 1, UT : 5,		CONFIG : 'N U T, 0, 0, 0',
	X =  -129.508  mm,	Y =   108.794  mm,	Z =   449.995  mm,
	W =  -179.665 deg,	P =     -.366 deg,	R =   -25.099 deg
};
/END
